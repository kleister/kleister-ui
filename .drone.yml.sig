eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9zcnYvYXBwCiAgcGF0aDogc3JjL2dpdGh1Yi5jb20va2xlaXN0ZXIva2xlaXN0ZXItdWkKCnBpcGVsaW5lOgogIHRlc3Rpbmc6CiAgICBpbWFnZTogd2ViaGlwcGllL25vZGVqczpsYXRlc3QKICAgIHB1bGw6IHRydWUKICAgIGNvbW1hbmRzOgogICAgICAtIG5wbSBpbnN0YWxsCiAgICAgIC0gbnBtIHJ1biBsaW50CiAgICAgIC0gbnBtIHJ1biBidWlsZAogICAgICAtIG5wbSBydW4gdGVzdAoKICBzZXJ2ZXI6CiAgICBpbWFnZTogd2ViaGlwcGllL2dvbGFuZzpsYXRlc3QKICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBDR09fRU5BQkxFRDogMAogICAgICBUQUdTOgogICAgICBHT1BBVEg6IC9zcnYvYXBwCiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIGNsZWFuCiAgICAgIC0gbWFrZSB2ZXQKICAgICAgLSBtYWtlIGxpbnQKICAgICAgLSBtYWtlIGdlbmVyYXRlCiAgICAgIC0gbWFrZSB0ZXN0CiAgICAgIC0gbWFrZSBidWlsZAoKICB1cGRhdGVyOgogICAgaW1hZ2U6IHdlYmhpcHBpZS9nb2xhbmc6bGF0ZXN0CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQ0dPX0VOQUJMRUQ6IDAKICAgICAgVEFHUzoKICAgICAgR09QQVRIOiAvc3J2L2FwcAogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBwdWJsaXNoCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoLCB0YWcgXQogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlLyosIHJlZnMvdGFncy8qIF0KCiAgIyBjb3ZlcmFnZToKICAjICAgaW1hZ2U6IHBsdWdpbnMvY292ZXJhZ2UKICAjICAgc2VydmVyOiBodHRwOi8vY292ZXJhZ2UuZHJvbmVoaXBwaWUuZGUKICAjICAgd2hlbjoKICAjICAgICBldmVudDogWyBwdXNoLCB0YWcsIHB1bGxfcmVxdWVzdCBdCgogIGRvY2tlcjoKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgcmVwbzoga2xlaXN0ZXIva2xlaXN0ZXItdWkKICAgIHRhZ3M6IFsgJyR7RFJPTkVfVEFHIyN2fScgXQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgdGFnIF0KICAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KCiAgZG9ja2VyOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICByZXBvOiBrbGVpc3Rlci9rbGVpc3Rlci11aQogICAgdGFnczogWyAnJHtEUk9ORV9CUkFOQ0gjI3JlbGVhc2Uvdn0nIF0KICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2ggXQogICAgICBicmFuY2g6IFsgcmVsZWFzZS8qIF0KCiAgZG9ja2VyOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICByZXBvOiBrbGVpc3Rlci9rbGVpc3Rlci11aQogICAgdGFnczogWyAnbGF0ZXN0JyBdCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoIF0KICAgICAgYnJhbmNoOiBbIG1hc3RlciBdCgogICMgcnN5bmM6CiAgIyAgIGltYWdlOiBwbHVnaW5zL3JzeW5jCiAgIyAgIHVzZXI6IGRlcGxveQogICMgICBob3N0OiBkbC53ZWJoaXBwaWUuZGUKICAjICAgc291cmNlOiBkaXN0L3JlbGVhc2UvCiAgIyAgIHRhcmdldDogL3Vzci9zaGFyZS93ZWJhcHBzL2RsL3B1YmxpY19odG1sL2tsZWlzdGVyLXVpLyR7RFJPTkVfVEFHIyN2fQogICMgICByZWN1cnNpdmU6IHRydWUKICAjICAgZGVsZXRlOiB0cnVlCiAgIyAgIHdoZW46CiAgIyAgICAgZXZlbnQ6IFsgdGFnIF0KICAjICAgICBicmFuY2g6IFsgcmVmcy90YWdzLyogXQoKICAjIHJzeW5jOgogICMgICBpbWFnZTogcGx1Z2lucy9yc3luYwogICMgICB1c2VyOiBkZXBsb3kKICAjICAgaG9zdDogZGwud2ViaGlwcGllLmRlCiAgIyAgIHNvdXJjZTogZGlzdC9yZWxlYXNlLwogICMgICB0YXJnZXQ6IC91c3Ivc2hhcmUvd2ViYXBwcy9kbC9wdWJsaWNfaHRtbC9rbGVpc3Rlci11aS8ke0RST05FX1RBRyMjcmVsZWFzZS92fQogICMgICByZWN1cnNpdmU6IHRydWUKICAjICAgZGVsZXRlOiB0cnVlCiAgIyAgIHdoZW46CiAgIyAgICAgZXZlbnQ6IFsgcHVzaCBdCiAgIyAgICAgYnJhbmNoOiBbIHJlbGVhc2UvKiBdCgogICMgcnN5bmM6CiAgIyAgIGltYWdlOiBwbHVnaW5zL3JzeW5jCiAgIyAgIHVzZXI6IGRlcGxveQogICMgICBob3N0OiBkbC53ZWJoaXBwaWUuZGUKICAjICAgc291cmNlOiBkaXN0L3JlbGVhc2UvCiAgIyAgIHRhcmdldDogL3Vzci9zaGFyZS93ZWJhcHBzL2RsL3B1YmxpY19odG1sL2tsZWlzdGVyLXVpL21hc3RlcgogICMgICByZWN1cnNpdmU6IHRydWUKICAjICAgZGVsZXRlOiB0cnVlCiAgIyAgIHdoZW46CiAgIyAgICAgZXZlbnQ6IHB1c2gKICAjICAgICBicmFuY2g6IG1hc3RlcgoKICBnaXRodWI6CiAgICBpbWFnZTogcGx1Z2lucy9naXRodWItcmVsZWFzZQogICAgZmlsZXM6CiAgICAgIC0gZGlzdC9yZWxlYXNlLyoKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHRhZyBdCiAgICAgIGJyYW5jaDogWyByZWZzL3RhZ3MvKiBdCgogIGdpdHRlcjoKICAgIGltYWdlOiBwbHVnaW5zL2dpdHRlcgo.g_pYZhAgU-gcuNxY0CrFlx-IIVLbo65sSH_vikp-CEw